<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 默风博客</title>
    <link>https://blog.mofeng.run/posts/</link>
    <description>Recent content in Posts on 默风博客</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 01 Aug 2025 14:58:08 +0800</lastBuildDate>
    <atom:link href="https://blog.mofeng.run/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Lenny&#39;s Newsletter 年度订阅新一轮可以领取的免费产品</title>
      <link>https://blog.mofeng.run/posts/lennys-newsletter-free-premium-tools/</link>
      <pubDate>Fri, 01 Aug 2025 14:58:08 +0800</pubDate>
      <guid>https://blog.mofeng.run/posts/lennys-newsletter-free-premium-tools/</guid>
      <description>&lt;h3 id=&#34;lennys-newsletter--新一轮大礼包活动&#34;&gt;Lenny&amp;rsquo;s Newsletter  新一轮大礼包活动&lt;/h3&gt;&#xA;&lt;p&gt;我收到了 Lenny&amp;rsquo;s Newsletter 邮件，标题是&amp;quot;Announcing 15+ free premium tools available exclusively to paid annual subscribers&amp;quot;。由于之前 Lenny&amp;rsquo;s Newsletter 第一次的大礼包非常给力（包含 cursor 等许多高价值产品），所以这次新一轮活动我非常感兴趣。&lt;/p&gt;&#xA;&lt;p&gt;登录之后，可以看到新一轮可以领取的免费产品为下面这些。&#xA;&lt;img src=&#34;https://blog.mofeng.run/img/image-20250801150031000.png&#34; alt=&#34;免费产品&#34;&gt;&#xA;这次可以领取的免费产品中我了解的产品就很少了，没有第一次大礼包 cursor 那样的重量级产品。于是我目前只领取了两款产品：GAMMA，使用 AI 能力制作演示文稿；N8N，集成 AI 的工作流编排软件。作者实测，这两款产品都支持中国银联卡支付，非常 nice。&lt;/p&gt;&#xA;&lt;p&gt;GAMMA 支持中国银联卡支付，没有扣款验证，非常方便。&#xA;&lt;img src=&#34;https://blog.mofeng.run/img/image-20250801152235000.png&#34; alt=&#34;GAMMA&#34;&gt;&#xA;N8N 支持中国银联卡支付，有1美元扣款验证，验证之后会退还。&#xA;&lt;img src=&#34;https://blog.mofeng.run/img/image-20250801152340000.png&#34; alt=&#34;N8N&#34;&gt;&#xA;升级订阅成功后，记得取消明年的订阅，不然明年会收到一大笔美元账单。我是直接取消的，似乎不会对已有的免费订阅产生影响。&lt;/p&gt;&#xA;&lt;h3 id=&#34;其他&#34;&gt;其他&lt;/h3&gt;&#xA;&lt;p&gt;Lenny&amp;rsquo;s Newsletter 第一次大礼包的时候非常火爆，我只领取了少数几款能用到的产品兑换码，没几天热门产品的兑换码就被消耗空了。这次热度似乎没那么大了，中文互联网上少有报道（除了万能的海鲜市场，海鲜市场已经不少人在倒卖了）。&lt;/p&gt;&#xA;&lt;p&gt;之前兑换码兑换的 cursor 套餐是我目前使用强度最高的产品。现在 cursor 转向基于 token 的计费方式后，兑换码免费兑换的20美元的 cursor pro 计划我能使用60美元左右的高级模型（如 cluade 4 sonnet）才达到限制。对于一年的免费套餐来说（因为我在网上看到另外一条免费途径教育计划似乎限额很严重），这个使用限额和稳定性我还是比较满意的。&#xA;&lt;img src=&#34;https://blog.mofeng.run/img/image-20250801152409000.png&#34; alt=&#34;cursor&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux Swap swappiness 参数使用</title>
      <link>https://blog.mofeng.run/posts/linux_swap_swappiness/</link>
      <pubDate>Thu, 12 Dec 2024 12:37:01 +0000</pubDate>
      <guid>https://blog.mofeng.run/posts/linux_swap_swappiness/</guid>
      <description>&lt;h3 id=&#34;前言&#34;&gt;前言&lt;/h3&gt;&#xA;&lt;p&gt;事情起因是我计划让一个优先级较低 Docker 容器应用使用部分 Swap 内存减小对系统的压力，重新创建容器时添加了 &lt;code&gt;-m 200M --memory-swap 500M&lt;/code&gt; 参数，结果容器应用服务无法完全启动，&lt;code&gt;fre -m&lt;/code&gt; 查看发现 Swap 内存空间占用也没有明显增加，查询资料才知道使用 Swap 内存不是创建挂载 Swap 分区就足够了的。&lt;/p&gt;&#xA;&lt;h3 id=&#34;正文&#34;&gt;正文&lt;/h3&gt;&#xA;&lt;p&gt;新建挂载完 Swap 分区之后还需要设置 swappiness 参数才能更好的发挥作用。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;swappiness 的值的大小对如何使用swap分区是有着很大的联系的。先前，人们建议把 vm.swapiness 设置为0，它意味着“除非发生内存益处，否则不要进行内存交换”。直到Linux内核 3.5-rcl 版本发布，这个值的意义才发生了变化。这个变化被一直到其他的发行版本上，包括 RedHat 企业版内核 2.6.32-303。在发生变化之后，0意味着“在任何情况下都不要发生交换”。所以现在建议把这个值设置为1。swappiness＝100 的时候表示积极的使用 swap 分区，并且把内存上的数据及时的搬运到 swap 空间里面。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#查看 swappiness 参数&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat /proc/sys/vm/swappiness&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#临时修改&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sysctl vm.swappiness&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;60&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#永久修改&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;vm.swappiness=60&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /etc/sysctl.conf&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查看系统 swappiness 参数值，返回值为0，修改此参数后 Swap 内存占用明显增加，容器应用服务也完全启动了。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;参考文章：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/yinzhengjie/p/9994207.html&#34;&gt;https://www.cnblogs.com/yinzhengjie/p/9994207.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fedora 安装远程控制软件</title>
      <link>https://blog.mofeng.run/posts/fedora_install_remotecontorl_software/</link>
      <pubDate>Thu, 12 Dec 2024 12:30:40 +0000</pubDate>
      <guid>https://blog.mofeng.run/posts/fedora_install_remotecontorl_software/</guid>
      <description>&lt;p&gt;虽然又很多开源远程控制软件（如 RustDesk），但是在服务业你无法强迫其他用户和你使用同样的软件，最终还是用户用什么你用什么。所以这篇文章记录一下在 Ferora 41 系统上向日葵远程控制和 ToDesk 的安装方法。安装&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;ToDesk&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;官网可以直接下载到 Linux 版本的安装包。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo yum install libappindicator-gtk3&#xA;sudo yum install ./todesk-v4.7.2.0-x86_64.rpm&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://blog.mofeng.run/img/image-20241128162806739.png&#34; alt=&#34;image-20241128162806739&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;向日葵远程控制&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;官网只能下载到 Centos 版本的安装包，并不兼容 Fedora，需要一些额外的操作才可以正常使用。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;强制安装&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;首先到官网下载到Centos 版本的安装包，然后强制安装 rpm 安装包。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;rpm -ivh --force --no-deps &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;修改脚本&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;需要手动为 /usr/local/sunlogin/rpminstall.sh 文件和 /usr/local/sunlogin/scripts/start.sh 文件中共三处对 os_name 的判断加上 fedora，即 &lt;code&gt;if [ $os_name == &#39;centos&#39; ] || [ &amp;quot;$(echo $os_name |grep redhat)&amp;quot; != &amp;quot;&amp;quot; ]&lt;/code&gt; 替换为 &lt;code&gt;if [ $os_name == &#39;centos&#39; ] || [ &amp;quot;$os_name&amp;quot; == &amp;quot;fedora&amp;quot; ] || [ &amp;quot;$(echo $os_name |grep redhat)&amp;quot; != &amp;quot;&amp;quot; ]&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux 下进行 SQL Server 课程实验</title>
      <link>https://blog.mofeng.run/posts/use_fedora_linux_do_schoolwork/</link>
      <pubDate>Thu, 12 Dec 2024 12:24:53 +0000</pubDate>
      <guid>https://blog.mofeng.run/posts/use_fedora_linux_do_schoolwork/</guid>
      <description>&lt;h3 id=&#34;前言&#34;&gt;前言&lt;/h3&gt;&#xA;&lt;p&gt;作者最近安装了 Fedora 41 系统，体验一番后发现现在的 Linux 桌面生态比此前好了非常多，比如微信也有官方的 Linux 版本可用了。&lt;/p&gt;&#xA;&lt;p&gt;于是想尝试将日常需求（比如计算机课程作业）迁移到 Fedora 41 试试看看能不能满足。这篇文章是将《数据库原理及应用》的 SQL Server 实验迁移到 Linux 平台上的实际体验。&lt;/p&gt;&#xA;&lt;h3 id=&#34;安装-sql-server&#34;&gt;安装 SQL Server&lt;/h3&gt;&#xA;&lt;p&gt;这里使用 Docker 容器方式一键部署，非常顺利。&lt;/p&gt;&#xA;&lt;p&gt;微软官方教程：https://learn.microsoft.com/zh-cn/sql/linux/quickstart-install-connect-docker?view=sql-server-ver16&amp;amp;tabs=cli&amp;amp;pivots=cs1-bash&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#新建 SQL Server dcoker 实例&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run -e &lt;span class=&#34;s2&#34;&gt;&amp;#34;ACCEPT_EULA=Y&amp;#34;&lt;/span&gt; -e &lt;span class=&#34;s2&#34;&gt;&amp;#34;MSSQL_SA_PASSWORD=&amp;lt;YourStrong@Passw0rd&amp;gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;se&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   -p 1433:1433 --name sql1 --hostname sql1 &lt;span class=&#34;se&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   -d &lt;span class=&#34;se&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;   mcr.microsoft.com/mssql/server:2022-latest&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;连接-sql-server&#34;&gt;连接 SQL Server&lt;/h3&gt;&#xA;&lt;p&gt;可以使用 &lt;code&gt;navicat17-premium-lite&lt;/code&gt; 免费软件连接数据库。这个软件为 Linux 发行版提供了 AppImage  可执行文件，界面比较美观，也能够在 Linux 上流畅稳定地运行。&lt;/p&gt;&#xA;&lt;p&gt;首先新新建 SQL Server 连接，使用本地地址 127.0.0.1，用户名为 sa，密码为 &lt;a href=&#34;mailto:YourStrong@Passw0rd&#34;&gt;YourStrong@Passw0rd&lt;/a&gt;，然后就可以连接刚才部署的 SQL Server 数据库实例了。&lt;/p&gt;&#xA;&lt;p&gt;新建 SQL 查询，返回服务器上所有数据库的名称：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;databases&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://blog.mofeng.run/img/image-20241126214519167.png&#34; alt=&#34;image-20241126214519167&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ferora 41 日常使用和常用软件安装</title>
      <link>https://blog.mofeng.run/posts/use_fedora_linux/</link>
      <pubDate>Thu, 12 Dec 2024 12:08:35 +0000</pubDate>
      <guid>https://blog.mofeng.run/posts/use_fedora_linux/</guid>
      <description>&lt;p&gt;心血来潮（&lt;del&gt;闲来无事&lt;/del&gt;），为自己的电脑安装了 Ferora 41 系统并在日常学习和生活中使用。个人认为 Ferora 是一个非常精致和稳定的系统，这个使用过程几乎没出现什么问题和错误。&lt;/p&gt;&#xA;&lt;p&gt;这里记录一下 Ferora 41 系统上的相关软件使用。&lt;/p&gt;&#xA;&lt;h3 id=&#34;常用软件安装&#34;&gt;常用软件安装&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Gnome 扩展&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo yum install gnome-tweak-tool&#xA;sudo yum install gnome-extensions-app&#xA;sudo yum install gnome-shell-extension-dash-to-dock&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里推荐两个扩展，Dash to Dock （应用 Dock 栏）和 Tray Icons: Reloaded （应用托盘）。&lt;/p&gt;&#xA;&lt;p&gt;如果不安装 Tray Icons: Reloaded 应用托盘扩展，QQ 等应用关闭后会一直在在后台运行，再次打开无法在打开此前界面而是打开新实例，只能 &lt;code&gt;killall qq&lt;/code&gt; 强制关闭全部后台。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://blog.mofeng.run/img/image-20241124163719813.png&#34; alt=&#34;image-20241124163719813&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;QQ 和微信：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;QQ 和微信官网都有提供 rpm 下载，直接安装即可。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo yum install ./QQ_3.2.13_241121_x86_64_01.rpm&#xA;sudo yum install ./WeChatLinux_x86_64.rpm&#xA;#修复微信依赖库找不到的报错&#xA;sudo ln -s /usr/lib64/libbz2.so.1 /usr/lib64/libbz2.so.1.0&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://blog.mofeng.run/img/image-20241124170219161.png&#34; alt=&#34;image-20241124170219161&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Microsoft Office 2016&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;通过 PlayOnLinux 安装，但是不能使用 PlayOnLinux 自带的安装策略（我没成功），得按照下面这个视频教程操作。&lt;/p&gt;</description>
    </item>
    <item>
      <title>香橙派 ONE OTG 切换方法</title>
      <link>https://blog.mofeng.run/posts/orangepi_one_otg_not_available/</link>
      <pubDate>Mon, 18 Nov 2024 07:02:08 +0000</pubDate>
      <guid>https://blog.mofeng.run/posts/orangepi_one_otg_not_available/</guid>
      <description>&lt;p&gt;全志 CPU OTG 模式切换的方法和晶晨、 瑞芯微不同，我一次接触这块开发板时产生了误解，现将切换方法记录如下。此方法适用于香橙派 ONE 和 香橙派 ZERO 等使用 h2+/h3 CPU 的开发板。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#我遇到的两种情况&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#通过 echo 写入数字（0，1，2，不同数字代表不同模式）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;  &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &amp;gt; /sys/bus/platform/devices/sunxi_usb_udc/otg_role&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#直接 echo 写入 otg 模式&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; peripheral &amp;gt; /sys/devices/platform/soc/1c19000.usb/musb-hdrc.2.auto/mode&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;del&gt;最近入手了一块香橙派 one，一系列测试后发现官方的高 Linux 系统中无法使用 OTG，没找到 OTG 与 Docker 共存的办法，非常可惜。&lt;/del&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://blog.mofeng.run/img/orange-pi-one-banner-img-1731912755718-2.png&#34; alt=&#34;orange-pi-one-banner-img&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;del&gt;因为官方产品介绍上写明了开发板有一个 USB OTG 端口，测试前还是信心满满的。然而使用手册上 Linux 系统使用说明一节却没找到关于 OTG 的使用说明，这时候我产生了一些疑惑，心悬了起来。&lt;/del&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://blog.mofeng.run/img/image-20241118145156089.png&#34; alt=&#34;image-20241118145156089&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;del&gt;在自己安装不同系统测试后，悬着的心终于死了。&lt;/del&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;del&gt;测试结果如下：&lt;/del&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;del&gt;官方 5.4.65 内核和 Armbian 社区 6.6.44 内核无法使用 OTG，无法控制 USB 端口模式&lt;/del&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;del&gt;官方 3.4.113 内核可以使用 OTG，但无法安装 Docker&lt;/del&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#官方 3.4.113 内核使能 OTG&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt; &amp;gt; /sys/bus/platform/devices/sunxi_usb_udc/otg_role&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://blog.mofeng.run/img/image-20241118142509993.png&#34; alt=&#34;image-20241118142509993&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>回顾自己的博客历史</title>
      <link>https://blog.mofeng.run/posts/my_blog_history/</link>
      <pubDate>Sun, 17 Nov 2024 14:16:07 +0000</pubDate>
      <guid>https://blog.mofeng.run/posts/my_blog_history/</guid>
      <description>&lt;p&gt;正式博客建站的时候没有再使用意义不明的二级域名，而是在腾讯云以非常低的首年入手了 mofeng.xyz 这个域名。当时正处于口罩时期，教学采用线上网课的方式进行，这给了我接触网络合理的理由，于是日夜沉迷于此。下图是2020年4月28日的博客截图和百度网站统计。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://blog.mofeng.run/img/05_2020-04-28_DECD18E8.jpeg&#34; alt=&#34;05_2020-04-28_DECD18E8&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://blog.mofeng.run/img/03_2020-04-28_B5F69B11.png&#34; alt=&#34;03_2020-04-28_B5F69B11&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;当时发现新大陆、与网友交流的兴奋仍记忆清晰。对我影响比较大的是寒枫所在的凤栖社区，虽然我只是透明人窥屏的存在，但还是我口罩时代一段难忘的记忆。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://blog.mofeng.run/img/06_2020-04-28_C7C2E849.png&#34; alt=&#34;06_2020-04-28_C7C2E849&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://blog.mofeng.run/img/13_2020-03-31_3DB40746.jpeg&#34; alt=&#34;13_2020-03-31_3DB40746&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;疫情的影响慢慢减退之后，回到学校上学之后就回归学习日常生活，这段时期的中心就在学习上了。一直到现在，自己的博客都在维护，程序主题换了一个又一个，网站搬家迁移一次又一次，文章确实越来越少了。&lt;/p&gt;&#xA;&lt;p&gt;日后会在这个博客上多写一些文章，无关观众，作为自己网络表达和技术记录的一个小天地。&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用 hugo 搭建博客</title>
      <link>https://blog.mofeng.run/posts/use-hugo-build-blog/</link>
      <pubDate>Tue, 22 Oct 2024 11:48:30 +0000</pubDate>
      <guid>https://blog.mofeng.run/posts/use-hugo-build-blog/</guid>
      <description>&lt;h3 id=&#34;新建本地站点&#34;&gt;新建本地站点&lt;/h3&gt;&#xA;&lt;p&gt;Hugo是由Go编写的快速现代静态网站生成器，旨在让网站创建变得有趣。&lt;/p&gt;&#xA;&lt;p&gt;官方有详细的安装教程 &lt;a href=&#34;https://gohugo.io/getting-started/quick-start&#34;&gt;https://gohugo.io/getting-started/quick-start&lt;/a&gt;，这里就不赘述了。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#Ubuntu/Debain 安装 hugo&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#如果仓库版本过旧可以到 Github 下载最新版本的 deb 包&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install  hugo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#检查 hugo 版本&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#创建一个新站点&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo new site myblog&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#进入站点目录&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; myblog&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#创建一个新文章&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo new posts/my-first-post.md&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#启动 hugo 服务器，渲染草稿需要添加 --buildDrafts 参数&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo server&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#生成静态页面&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;部署到云服务器&#34;&gt;部署到云服务器&lt;/h3&gt;&#xA;&lt;p&gt;由于 Github Pages 在大陆访问速度较慢，所以这里选择部署到云服务器上。&#xA;这里使用 Github 中转代码，在云服务器上使用 Nginx 新建静态站点，并安装 Webhook 监听 Github 代码变动，自动更新渲染站点。&lt;/p&gt;&#xA;&lt;p&gt;这里需要在云服务上提前安装好 webhook 和 hugo，然后新建一个静态站点（这里我使用 1panel 面板操作）。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo apt install webhook hugo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;webhook 配置文件实例：&lt;/p&gt;</description>
    </item>
    <item>
      <title>将 One-KVM 迁移到 Docker 平台</title>
      <link>https://blog.mofeng.run/posts/kvmd_on_docker/</link>
      <pubDate>Fri, 06 Sep 2024 23:55:44 +0800</pubDate>
      <guid>https://blog.mofeng.run/posts/kvmd_on_docker/</guid>
      <description>&lt;p&gt;无内容&lt;/p&gt;</description>
    </item>
    <item>
      <title>博客重新开始</title>
      <link>https://blog.mofeng.run/posts/restart_blog/</link>
      <pubDate>Fri, 06 Sep 2024 00:00:00 +0800</pubDate>
      <guid>https://blog.mofeng.run/posts/restart_blog/</guid>
      <description>&lt;h3 id=&#34;说明&#34;&gt;说明&lt;/h3&gt;&#xA;&lt;p&gt;博客非常久没有更新了，所以最近干脆重新使用 hugo 重新搭建一个。&lt;/p&gt;&#xA;&lt;p&gt;默风博客最早在2020年3月14日建站，使用 Typecho 博客程序，大约是高一时期，当时对计算机科学非常感兴趣，所以尝试自己建站，从共享虚拟主机空间到云服务器。高中时期受限于学识和技术水平，虽然课外时间不多还是尝试了非常多的新东西，文章大多是各类网站的搭建记录。到了大学时期，设备更好时间更自由，但几乎没怎么更新博客，大概是表达欲的减弱吧（&lt;del&gt;其实是懒&lt;/del&gt;）。&lt;/p&gt;&#xA;&lt;p&gt;这里放一张互联网档案馆的截图以作纪念。&#xA;&lt;img src=&#34;https://blog.mofeng.run/img/image24102201.png&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
